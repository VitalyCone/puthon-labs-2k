"""
Практическое задание № 2. Создание типа данных «класс»
1. Создать класс с полями, указанными в индивидуальном задании.
2. Реализовать в классе методы:
* конструктор по умолчанию;
* деструктор для освобождения памяти (с сообщением об уничтожении
объекта);
* функции обработки данных, указанные в индивидуальном задании;
* функцию формирования строки информации об объекте.
3. Создать проект для демонстрации работы: сформировать объекты со
значениями-константами и с введенными с клавиатуры значениями полей объекта. В
основной ветке программы создайте три объекта класса. Вывести результаты работы на
экран.

задание:
    Класс-родитель и его
    поля:
        Время (три числа):
        часы, минуты, секунды

    Функция-метод 1
    обработки данных:
        Вычислить количество
        полных минут в
        указанном времени

    Функция-метод 2
    обработки данных:
        Уменьшить время на
        10 минут

К программному коду предъявляются следующие требования:
1) именование переменных должно быть осмысленным;
2) в коде программы должны присутствовать комментарии;
3) код должен производить форматированный вывод результатов;
4) код должен запрашивать пользователя входные данные;
5) код должен иметь базовый уровень проверки входных данных.
"""

class Time:
    def __init__(self, hours=0, minutes=0, seconds=0):
        """Конструктор по умолчанию."""
        self.hours = hours
        self.minutes = minutes
        self.seconds = seconds

    def __del__(self):
        """Деструктор для освобождения памяти."""
        print(f"Объект времени {self} уничтожен.")

    def total_minutes(self):
        """Вычисляет количество полных минут в указанном времени."""
        return self.hours * 60 + self.minutes

    def decrease_time(self):
        """Уменьшает время на 10 минут."""
        total_minutes = self.total_minutes() - 10
        if total_minutes < 0:
            total_minutes = 0  # Не допускаем отрицательного времени
        self.hours = total_minutes // 60
        self.minutes = total_minutes % 60

    def __str__(self):
        """Формирует строку информации об объекте."""
        return f"{self.hours:02}:{self.minutes:02}:{self.seconds:02}"


if __name__ == "__main__":
    # Создаем три объекта времени
    time1 = Time(1, 30, 0)  # Время с константами
    time2 = Time()  # Время по умолчанию
    time3 = Time(2, 45, 30)  # Время с константами

    # Запрашиваем у пользователя ввод времени для второго объекта
    try:
        hours = int(input("Введите часы: "))
        minutes = int(input("Введите минуты: "))
        seconds = int(input("Введите секунды: "))
        time2 = Time(hours, minutes, seconds)
    except ValueError:
        print("Ошибка: Введите целые числа для часов, минут и секунд.")
        quit()
        
    
    # Выводим результаты
    print(f"Первый объект времени: {time1}")
    print(f"Количество полных минут в первом объекте: {time1.total_minutes()}")

    print(f"Второй объект времени: {time2}")
    print(f"Количество полных минут во втором объекте: {time2.total_minutes()}")

    print(f"Третий объект времени: {time3}")
    print(f"Количество полных минут в третьем объекте: {time3.total_minutes()}")

    # Уменьшаем время на 10 минут для каждого объекта
    time1.decrease_time()
    time2.decrease_time()
    time3.decrease_time()

    # Выводим измененные значения
    print(f"После уменьшения на 10 минут:")
    print(f"Первый объект времени: {time1}")
    print(f"Второй объект времени: {time2}")
    print(f"Третий объект времени: {time3}")